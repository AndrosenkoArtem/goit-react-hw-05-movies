{"version":3,"file":"static/js/661.3c21ecb3.chunk.js","mappings":"mTACaA,EAAkB,mCAAG,8FACnBC,EAAAA,EAAAA,IACX,6FAF8B,mFAAH,qDAKlBC,EAAc,mCAAG,WAAMC,GAAN,iFACfF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,8CADe,mFAAH,sDAKdC,EAAmB,mCAAG,WAAMD,GAAN,iFACpBF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,sDADoB,mFAAH,sDAKnBE,EAAmB,mCAAG,WAAMF,GAAN,iFACpBF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,sDADoB,mFAAH,sDAKnBG,EAAgB,mCAAG,WAAMC,GAAN,iFACjBN,EAAAA,EAAAA,IAAA,0DACwCM,EADxC,8CADiB,mFAAH,qD,sLCpBhBC,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OACE,wBACGA,EAAQC,KAAI,SAAAC,GACX,OACE,2BACE,gBACEC,IACED,EAAOE,aAAP,0CACuCF,EAAOE,cAC1C,gHAENC,IAAKH,EAAOI,QAEd,uBAAIJ,EAAOK,iBACX,yBAAG,cAAYL,EAAOM,eAVfN,EAAOO,GAanB,KAGN,EACDV,EAASW,UAAY,CACnBV,QAASW,IAAAA,MAAAA,Y,cCKX,EAxBa,WACX,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOZ,EAAP,KAAgBa,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQrB,GAAYsB,EAAAA,EAAAA,MAAZtB,QAcR,OAbAuB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBH,EAAS,MAFQ,UAGMpB,EAAAA,EAAAA,IAAoBD,GAH1B,gBAGTyB,EAHS,EAGTA,KACRN,EAAWM,EAAKC,MAJC,gDAMjBL,EAAS,EAAD,IACRM,QAAQC,IAAR,MAPiB,yDAAH,qDAUlBJ,GACD,GAAE,CAACxB,KAEF,gCACGoB,GAASS,EAAAA,GAAAA,QAAcT,IACxB,SAACf,EAAD,CAAUC,QAASA,MAGxB,C,mCCnBD,IAAIwB,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIhC,KAAO,sBACLgC,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAe/B,UAAY+B,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["API/fetchFilm.js","components/CastList/CastList.jsx","pages/CastPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\nexport const fetchFilmsTrending = async () => {\n  return await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=14b7b0dab2e9101796b24880530a0048'\n  );\n};\nexport const fetchFilmsById = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=14b7b0dab2e9101796b24880530a0048`\n  );\n};\nexport const fetchCreditsForFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=14b7b0dab2e9101796b24880530a0048`\n  );\n};\nexport const fetchReviewsForFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=14b7b0dab2e9101796b24880530a0048`\n  );\n};\nexport const fetchFimsByQuery = async query => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=14b7b0dab2e9101796b24880530a0048`\n  );\n};\n","import PropTypes from 'prop-types';\nexport const CastList = ({ credits }) => {\n  return (\n    <ul>\n      {credits.map(credit => {\n        return (\n          <li key={credit.id}>\n            <img\n              src={\n                credit.profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${credit.profile_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Clochoderick_Stone.JPG/200px-Clochoderick_Stone.JPG'\n              }\n              alt={credit.name}\n            />\n            <p>{credit.original_name}</p>\n            <p>Character: {credit.character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nCastList.prototype = {\n  credits: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchCreditsForFilm } from '../API/fetchFilm';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from 'components/CastList/CastList';\nimport { toast } from 'react-toastify';\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchCredits = async () => {\n      try {\n        setError(null);\n        const { data } = await fetchCreditsForFilm(movieId);\n        setCredits(data.cast);\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      }\n    };\n    fetchCredits();\n  }, [movieId]);\n  return (\n    <>\n      {error && toast.warning(error)}\n      <CastList credits={credits} />\n    </>\n  );\n};\nexport default Cast;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["fetchFilmsTrending","axios","fetchFilmsById","movieId","fetchCreditsForFilm","fetchReviewsForFilm","fetchFimsByQuery","query","CastList","credits","map","credit","src","profile_path","alt","name","original_name","character","id","prototype","PropTypes","useState","setCredits","error","setError","useParams","useEffect","fetchCredits","data","cast","console","log","toast","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}