{"version":3,"file":"static/js/46.16cac3e0.chunk.js","mappings":"kTACaA,EAAkB,mCAAG,8FACnBC,EAAAA,EAAAA,IACX,6FAF8B,mFAAH,qDAKlBC,EAAc,mCAAG,WAAMC,GAAN,iFACfF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,8CADe,mFAAH,sDAKdC,EAAmB,mCAAG,WAAMD,GAAN,iFACpBF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,sDADoB,mFAAH,sDAKnBE,EAAmB,mCAAG,WAAMF,GAAN,iFACpBF,EAAAA,EAAAA,IAAA,6CAC2BE,EAD3B,sDADoB,mFAAH,sDAKnBG,EAAgB,mCAAG,WAAMC,GAAN,iFACjBN,EAAAA,EAAAA,IAAA,0DACwCM,EADxC,8CADiB,mFAAH,qD,sLCnBhBC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,KAQxB,EACDN,EAAYO,UAAY,CACtBN,QAASO,IAAAA,QACPA,IAAAA,MAAgB,CACdF,GAAIE,IAAAA,OAAAA,WACJJ,OAAQI,IAAAA,OAAAA,WACRH,QAASG,IAAAA,OAAAA,aACRC,YACHA,Y,cCgBJ,EA/BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQlB,GAAYmB,EAAAA,EAAAA,MAAZnB,QACFoB,GAAcC,EAAAA,EAAAA,QAAO,MAe3B,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBL,EAAS,MAFQ,UAGMhB,EAAAA,EAAAA,IAAoBF,GAH1B,gBAGTwB,EAHS,EAGTA,KACRR,EAAWQ,EAAKC,SAJC,gDAMjBP,EAAS,EAAD,IACRQ,QAAQC,IAAR,MAPiB,yDAAH,qDAUlBJ,GACD,GAAE,CAACvB,IAEAoB,EAAYQ,UAAYtB,EAAQuB,QAC3B,uBAAG,8CAEZT,EAAYQ,QAAU,GAGpB,gCACGX,GAASa,EAAAA,GAAAA,QAAcb,IACxB,SAACZ,EAAD,CAAaC,QAASA,IAAW,OAGtC,C,mCC3BD,IAAIyB,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPL,CAQF,CAED,SAASG,IACP,OAAOV,CACR,CAHDA,EAAKxB,WAAawB,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASX,EACTY,QAAStB,EACTuB,YAAavB,EACbwB,WAAYd,EACZe,KAAMzB,EACN0B,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAepC,UAAYoC,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["API/fetchFilm.js","components/ReviewsList/ReviewsList.jsx","pages/ReviewsPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\nexport const fetchFilmsTrending = async () => {\n  return await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/week?api_key=14b7b0dab2e9101796b24880530a0048'\n  );\n};\nexport const fetchFilmsById = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=14b7b0dab2e9101796b24880530a0048`\n  );\n};\nexport const fetchCreditsForFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=14b7b0dab2e9101796b24880530a0048`\n  );\n};\nexport const fetchReviewsForFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=14b7b0dab2e9101796b24880530a0048`\n  );\n};\nexport const fetchFimsByQuery = async query => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=14b7b0dab2e9101796b24880530a0048`\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <b>{review.author}</b>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\nReviewsList.prototype = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { fetchReviewsForFilm } from '../API/fetchFilm';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList } from 'components/ReviewsList/ReviewsList';\nimport { toast } from 'react-toastify';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const firstRender = useRef(null);\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setError(null);\n        const { data } = await fetchReviewsForFilm(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  if (firstRender.current && !reviews.length) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n  firstRender.current = 1;\n\n  return (\n    <>\n      {error && toast.warning(error)}\n      <ReviewsList reviews={reviews} />;\n    </>\n  );\n};\nexport default Reviews;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["fetchFilmsTrending","axios","fetchFilmsById","movieId","fetchCreditsForFilm","fetchReviewsForFilm","fetchFimsByQuery","query","ReviewsList","reviews","map","review","author","content","id","prototype","PropTypes","isRequired","useState","setReviews","error","setError","useParams","firstRender","useRef","useEffect","fetchReviews","data","results","console","log","current","length","toast","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}